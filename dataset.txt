import React, { useState, useEffect } from "react";
import axios from "axios";
import DatasetDetails from "../components/DatasetDetails";
import DatasetList from "../components/DatasetList";

const DatasetsPage = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedCategory, setSelectedCategory] = useState("All");
  const [selectedDataset, setSelectedDataset] = useState(null);
  const [datasets, setDatasets] = useState([]);  // Initialize datasets as an empty array
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    const fetchDatasets = async () => {
      setLoading(true);
      const categoryFilter = selectedCategory === "All" ? "" : &category=${selectedCategory};
      const url = https://cors-anywhere.herokuapp.com/https://api.data.gov.in/resource/9ef84268-d588-465a-a308-a864a43d0070?api-key=579b464db66ec23bdd000001cdd3946e44ce4aad7209ff7b23ac571b&format=json&offset=0&search=${searchTerm}${categoryFilter};

      try {
        const response = await axios.get(url);
        
        const data = JSON.parse(response.data.contents); // Parse the JSON from the proxy response
        setDatasets(data.result.items || []);  // Make sure the items array is safe to access
      } catch (error) {
        console.error("Error fetching datasets:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchDatasets();
  }, [searchTerm, selectedCategory]);

  // ✅ Final Fixed Search & Filter Logic
  const filteredDatasets = (datasets || []).filter((dataset) => {  // Add a fallback to an empty array
    const lowerSearchTerm = searchTerm.toLowerCase().trim();
    const matchesCategory = selectedCategory === "All" || dataset.category === selectedCategory;
    const matchesSearch =
      dataset.title.toLowerCase().includes(lowerSearchTerm) ||
      dataset.description.toLowerCase().includes(lowerSearchTerm);

    return matchesCategory && matchesSearch;
  });

  return (
    <div className="bg-gray-900 text-white min-h-screen p-8">
      <div className="max-w-7xl mx-auto">
        <h1 className="text-3xl font-bold mb-6 text-center">Research Datasets</h1>

        {/* ✅ SEARCH BAR FIXED! */}
        <div className="mb-6 flex items-center bg-gray-800 rounded-lg p-2">
          <input
            type="text"
            placeholder="Search datasets..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="w-full p-3 rounded-lg bg-gray-700 text-white focus:outline-none focus:ring-2 focus:ring-green-400"
          />
        </div>

        {/* Category Dropdown */}
        <select
          value={selectedCategory}
          onChange={(e) => setSelectedCategory(e.target.value)}
          className="p-2 bg-gray-800 text-white rounded border-gray-600 mb-8"
        >
          <option value="All">All Categories</option>
          <option value="Real Estate">Real Estate</option>
          <option value="Social Media">Social Media</option>
          <option value="Health">Health</option>
          <option value="Finance">Finance</option>
        </select>

        {/* Dataset List or Details View */}
        {loading ? (
          <p className="text-white text-center">Loading datasets...</p>
        ) : (
          <DatasetList datasets={filteredDatasets} />
        )}
      </div>
    </div>
  );
};

export default DatasetsPage;